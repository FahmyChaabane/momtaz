stages:
  - build
  - test

variables:
  CI_REGISTRY_IMAGE: momtaz-dashboard-service

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - echo Running on branch $CI_COMMIT_REF_SLUG
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
    - docker push $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

health-test:
  # Use the official docker image.
  image: docker:latest
  stage: test
  services:
    - name: docker:dind
  variables:
    GIT_STRATEGY: none
  script:
    - echo Testing $CI_REGISTRY_IMAGE health.
    - docker network create -d bridge momtaz
    - docker container run -d --name momtaz-dashboard --net momtaz $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
    - sleep 3
    - docker container run -i -d --name momtaz-test --net momtaz alpine:3.16
    - sleep 3
    - docker container exec momtaz-test apk add --no-cache curl
    - docker container exec momtaz-test curl "http://momtaz-dashboard:3000/api/healthcheck" | grep up
